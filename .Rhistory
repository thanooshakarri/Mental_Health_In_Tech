norm=Normalizer()
norm.fit(X_train["Age"].values.reshape(-1,1))
X_train_price_norm = norm.transform(X_train[['Age'])
X_cv_price_norm = norm.transform(X_cv[['Age']]
X_test_price_norm = norm.transform(X_test[['Age']
#normalizing age column
norm=Normalizer()
norm.fit(X_train["Age"].values.reshape(-1,1))
X_train_price_norm = norm.transform(X_train[['Age'])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm
#normalizing age column
norm=Normalizer()
norm.fit(X_train[["Age"]])
X_train_price_norm = norm.transform(X_train[['Age'])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
#normalizing age column
norm=Normalizer()
norm.fit(X_train[["Age"]])
X_train_price_norm = norm.transform(X_train[['Age'])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm
#normalizing age column
norm=Normalizer()
norm.fit(X_train[["Age"]])
X_train_price_norm = norm.transform(X_train[['Age'])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
#normalizing age column
norm=Normalizer()
norm.fit(X_train[["Age"]])
X_train_price_norm = norm.transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm
X_cv_price_norm
X_train[["Age"]])
X_train[["Age]]
X_train[["Age"]]
norm.transform(X_train[['Age']])
norm.fit(X_train[["Age"]])
#normalizing age column
norm=Normalizer()
X_train[["Age"]]
X_train_price_norm = norm.fit_transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm
#normalizing age column
norm=Normalizer("l2")
X_train[["Age"]]
X_train_price_norm = norm.fit_transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
= norm.fit_transform(X_train[['Age']])
X
X_train_price_norm
#normalizing age column
norm=Normalizer("l1")
X_train[["Age"]]
X_train_price_norm = norm.fit_transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm
#normalizing age column
norm=Normalizer("l1")
X_train[["Age"]]
X_train_price_norm["norm"] = norm.fit_transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm["norm"]
X_train_price_norm[
X_train_price_norm[
#normalizing age column
norm=Normalizer(norm="l2")
X_train[["Age"]]
X_train_price_norm["norm"] = norm.fit_transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
#normalizing age column
norm=Normalizer(norm="l2")
X_train[["Age"]]
X_train_price_norm = norm.fit_transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm
#normalizing age column
norm=Normalizer(norm="l2")
X_train[["Age"]]
X_train_price_norm = norm.fit_transform(X_train[['Age']])
X_cv_price_norm = norm.transform(X_cv[['Age']])
X_test_price_norm = norm.transform(X_test[['Age']])
X_train_price_norm
norm.
norm
norm.fit_transform(X_train[['Age']])
dtype(X_train[["Age"]])
X_train[["Age"]])
dtype(X_train["Age"])
type(X_train["Age"])
type(X_train["Age"][0])
#normalizing age column
Age=normalize(np.arrray(list(data.Age)))
import pandas as pds
import numpy as np
from sklearn.preprocessing import OneHotEncoder
from sklearn.naive_bayes import GaussianNB
from scipy.sparse import hstack
from sklearn.preprocessing import normalize
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.model_selection import GridSearchCV
import math
import matplotlib.pyplot as plt
#normalizing age column
Age=normalize(np.arrray(list(data.Age)))
#normalizing age column
Age=normalize(np.array(list(data.Age)))
#normalizing age column
Age=normalize([np.array(list(data.Age))])
Age=
Age
numerical_vectors=pds.DataFrame(hstack((data.treatment.to_numpy().reshape(-1,1), Age, Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
sum(Age)
numerical_vectors=pds.DataFrame(hstack(([data.treatment], Age, Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
sum(Age)
numerical_vectors=pds.DataFrame(hstack(([np.array(data.treatment)], Age, Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
sum(Age)
numerical_vectors=pds.DataFrame(hstack(([np.array(data.treatment)], Age, Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
sum(Age)
numerical_vectors[114]
numerical_vectors.to_csv("Data/Numerical_vectors.csv")
numerical_vectors[115]
numerical_vectors.to_csv("Data/Numerical_vectors.csv")
numerical_vectors
numerical_vectors[0]
[np.array(data.treatment)],
Age,
numerical_vectors[0]
numerical_vectors[,1:10]
numerical_vectors
numerical_vectors=pds.DataFrame(hstack(( Age, Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
numerical_vectors
Age,
numerical_vectors=pds.DataFrame(hstack(( Age, Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack(( [Age], Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack(( Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence)).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1))).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical,obs_consequence,Age.reshape(-1,1),[np.array(data.treatment)])).toarray())
numerical_vectors
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment)).toarray())
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment)).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.reshape(-1,1))).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.array(data.treatment).reshape(-1,1))).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),pds.to_numpy(data.treatment).reshape(-1,1))).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.to_numpy()).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.to_numpy())).toarray())
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.to_numpy().reshape(-1,1))).toarray())
numerical_vectors
type(Age)
data.treatment.to_numpy().
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.array(data.treatment).reshape(-1,1))).toarray())
type(Age)
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.array([data.treatment]).reshape(-1,1))).toarray())
type(Age)
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.array([data.treatment]).reshape(-1,1))).toarray())
type(Age)
numerical_vectors
data.treatment.to_numpy()
type(data.treatment.to_numpy())
type(data.treatment.to_numpy().reshape(-1,1))
data.treatment.to_numpy().reshape(-1,1)
Age.reshape(-1,1),
type(Age.reshape(-1,1)),
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.to_numpy().reshape(-1,1))).toarray())
numerical_vectors
data[data["treatment"]=="Yes"]=1
data[data["treatment"]=="No"]=0
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.to_numpy().reshape(-1,1))).toarray())
data.treatment
numerical_vectors
data.treatment
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.to_numpy().reshape(-1,1))).toarray())
data.treatment
numerical_vectors
data.treatment.to_numpy()
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),[data.treatment.to_numpy()].reshape(-1,1))).toarray())
data.treatment.to_numpy()
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.array(data.treatment.to_numpy()).reshape(-1,1))).toarray())
data.treatment.to_numpy()
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.array([data.treatment.to_numpy()]).reshape(-1,1))).toarray())
data.treatment.to_numpy()
numerical_vectors
np.array([data.treatment.to_numpy()]).reshape(-1,1)
Age.reshape(-1,1),
np.array([data.treatment.to_numpy()]).reshape(-1,1)
work_interfere,
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.array([data.treatment.to_numpy()]).reshape(-1,1))).toarray())
data.treatment.to_numpy()
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),np.ndarray([data.treatment.to_numpy()]).reshape(-1,1))).toarray())
data.treatment.to_numpy()
numerical_vectors
data.treatment.to_numpy()
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),[data.treatment.to_numpy().reshape(-1,1)])).toarray())
data.treatment.to_numpy()
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment.to_numpy().reshape(-1,1))).toarray())
data.treatment.to_numpy()
numerical_vectors
data.treatment.to_numpy()
Age.reshape(-1,1))
Age.reshape(-1,1))
Age.reshape(-1,1)
data.treatment.to_numpy().reshape(-1,1)
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data.treatment)).toarray())
Age.reshape(-1,1)
numerical_vectors
data.treatment)
data[data["treatment"]=="Yes"]=1
data[data["treatment"]=="No"]=0
data["treatment"]=data.treatment.to_numpy().reshape(-1,1)
data["treatment"]=data.treatment.to_numpy().reshape(-1,1)
data["treatment"]=
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data["treatment"])).toarray())
numerical_vectors
numerical_vectors
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data["treatment"])).toarray())
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),data["treatment"])).toarray())
numerical_vectors
data.treatment
data.treatment.to_numpy().reshape(-1,1)
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),treatment_nd)).toarray())
data.treatment
numerical_vectors
data[data["treatment"]=="Yes"]=1
data[data["treatment"]=="No"]=0
treatment_nd=data.treatment.to_numpy().reshape(-1,1)
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),treatment_nd)).toarray())
data.treatment
numerical_vectors
treatment_nd=
treatment_nd
Age.reshape(-1,1),
type(treatment_nd)
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),treatment_nd.toarray())).toarray())
type(treatment_nd)
numerical_vectors
(treatment_nd)
treatment_nd=data.treatment.to_numpy().reshape(-1,1).astype("int")
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),treatment_nd.toarray())).toarray())
type(treatment_nd)
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),treatment_nd))).toarray())
type(treatment_nd)
numerical_vectors
numerical_vectors=pds.DataFrame(hstack((Gender, Country, self_employed,
family_history, work_interfere, no_employees,
remote_work, tech_company, benefits, care_options,
wellness_program, seek_help, anonymity, leave,
mental_health_consequence, phys_health_consequence, coworkers,
supervisor, mental_health_interview, phys_health_interview,
mental_vs_physical, obs_consequence,Age.reshape(-1,1),treatment_nd)).toarray())
type(treatment_nd)
numerical_vectors
numerical_vectors[115]
numerical_vectors.to_csv("Data/Numerical_vectors.csv")
